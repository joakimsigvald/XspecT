* handle nested new(...) in argument list: 
  "=> When(_ => _.AddNewItem(A<CartId>(), new(A<Sku>(), A<ProductType>(), A<Price>(), A<Vat>()), A<string>()));"
------------
* Return different pipeline after setup and run, and remove the HasRun guard clauses
* Verbose mode (static) that prints description after running each test
* Return different values on each call by:
Given<Service>.That(_ => _.DoesSomething()).First(3).Returns(1).AndNext().Returns(2).AndNext(2).Throws(new Exception())
* throw SetupFailed if providing a value to Use, which is not used, for instance when Given(new ConcreteClass()), 
  that was expected to be used instead of mocking IAbstractInterface,
  hinting that it should be provided as Given<IAbstractInterface>(new ConcreteClass())
